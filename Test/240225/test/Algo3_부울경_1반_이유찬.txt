3-1. 이 문제는 해당 문자열을 순회하면서 해당 문자열 직전에 나온 문자열과 비교를 하며,
같은 문자열인지 다른 문자열인지를 확인하고 같은 문자열이면 제거를 하는 작업이 필요하다.
이에 마지막 값을 지속적으로 확인할 수 있는 선입 후출 구조의 스택 자료구조가 적합하다고
생각한다. 해당 스택 자료 구조는 가장 마지막에 삽입 된 데이터를 확인하고 수정할 수 있다는
점에서 수정 문자열의 immutable한 속성을 보완할 수 있다.

3-2. 
stack = []
[A]
[A B]
[A B C]
[A B]	# 마지막 요소인 C와 다음 요소인 C가 같기 때문에 B 다음의 C를 pop
[A]	# 동일하게 B를 pop